# Generated by Django 2.1 on 2019-12-08 20:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import localflavor.us.models
import multiselectfield.db.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CartOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('ordered_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContainerPricing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_floors', models.CharField(max_length=100, verbose_name='No. of Floors')),
                ('variant', models.CharField(max_length=100, verbose_name='Variant')),
                ('square_feet', models.CharField(max_length=100, verbose_name='Approximate Square Feet')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Price')),
            ],
            options={
                'verbose_name': 'Containers Pricing',
                'verbose_name_plural': 'Containers Pricing',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Material Name')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialQuotations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_name', models.CharField(default=None, max_length=100, verbose_name='Material Name')),
                ('user_name', models.CharField(max_length=100, verbose_name='Name:')),
                ('company_name', models.CharField(max_length=100, verbose_name='Company Name:')),
                ('price', models.CharField(max_length=100, verbose_name='Price')),
                ('time_date', models.DateTimeField(auto_now_add=True, verbose_name='Quotation Date')),
            ],
            options={
                'verbose_name': 'MaterialQuotation',
                'verbose_name_plural': 'MaterialQuotations',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100, verbose_name='Name of Company')),
                ('f_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('l_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=100, verbose_name='Email')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(help_text='XXX-XXX-XXXX', max_length=18, region=None, verbose_name='Phone Number')),
                ('zipcode', localflavor.us.models.USZipCodeField(blank=True, max_length=10, null=True, verbose_name='Zip Code')),
                ('letter_of_credit', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=5, null=True, verbose_name='Do you have a Letter of Credit?')),
                ('how_much_letter_of_credit', models.CharField(blank=True, help_text='in USD$', max_length=50, null=True, verbose_name='What is the value of your Letter of Credit (in USD)?')),
                ('line_of_credit', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=5, null=True, verbose_name='Do you have a Line of Credit?')),
                ('how_much_line_of_credit', models.CharField(blank=True, help_text='in USD$', max_length=50, null=True, verbose_name='What is the currently unused amount in your Line of Credit?')),
                ('when_to_order', models.CharField(choices=[('urgent', 'Urgent(within 30 days)'), ('other', 'Other')], default=None, max_length=50, verbose_name='When are you looking to order?')),
                ('other_when_to_order', models.CharField(blank=True, choices=[('3-6 Months', '3-6 Months'), ('6-9 Months', '6-9 Months'), ('1 Year or More', '1 Year or More')], default=None, max_length=50, null=True, verbose_name='When To Order')),
                ('type_of_development', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('select all', 'Select All'), ('Commercial', 'Commercial'), ('Mixed-use', 'Mixed-use'), ('Multi-tenant', 'Multi-tenant'), ('Condominium', 'Condominium'), ('Townhome', 'Townhome'), ('Man Camp', 'Man Camp'), ('Mobile Home Park', 'Mobile Home Park'), ('RV Park', 'RV Park'), ('Park Home (as defined by Housing and Urban Development)', 'Park Home (as defined by Housing and Urban Development)'), ('Other', 'Other')], max_length=300, null=True, verbose_name='What type of development(s) are you seeking?')),
                ('other_type_of_development', models.CharField(blank=True, max_length=300, null=True, verbose_name='Other')),
                ('type_of_climate_area', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('select all', 'Select All'), ('Heavy Snow Load', 'Heavy Snow Load'), ('High Wind', 'High Wind'), ('Tornado', 'Tornado'), ('Earthquake', 'Earthquake'), ('Desert', 'Desert'), ('Other', 'Other ')], max_length=300, null=True, verbose_name='On which type of climate area(s) will the development(s) be sited? ')),
                ('other_type_of_climate_area', models.CharField(blank=True, max_length=200, null=True, verbose_name='Other')),
                ('type_of_smart_home', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Automated Home Shopping and Delivery', 'Automated Home Shopping and Delivery'), ('Self-Driving Transport to Local Shopping Centers', 'Self-Driving Transport to Local Shopping Centers'), ('Self-Driving Transport to Local Medical Facilities', 'Self-Driving Transport to Local Medical Facilities')], max_length=300, null=True, verbose_name='What type of smart home functionality are you interested in learning more about? ')),
                ('type_of_electric_vehicle_function', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Standard', 'Standard'), ('Capability to Load Handicapped Person Without Human Assistance', 'Capability to Load Handicapped Person Without Human Assistance')], max_length=300, null=True, verbose_name='An electric vehicle will be included with each housing unit. What type of electric vehicle function are you interested in?')),
                ('learn_about_electric_drive', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=100, null=True, verbose_name='Do you wish to learn more about an optional electric-drive community transport vehicle?')),
                ('septic_infrastructure', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=100, null=True, verbose_name='Does the development site already have septic infrastructure or service?')),
                ('installation_septic_infrastructure', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], default=None, max_length=100, null=True, verbose_name='Does it require the installation of septic infrastructure? (There will be a charge for initial infrastructure installation and periodic maintenance service charges.) ')),
            ],
        ),
        migrations.AddField(
            model_name='cartorder',
            name='order_items',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='order.ContainerPricing'),
        ),
        migrations.AddField(
            model_name='cartorder',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
