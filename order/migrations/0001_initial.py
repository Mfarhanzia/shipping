# Generated by Django 2.2.3 on 2019-07-12 11:20

import django.core.validators
from django.db import migrations, models
import localflavor.us.models
import multiselectfield.db.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100, verbose_name='Name of Company')),
                ('f_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('l_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=100, verbose_name='Email')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Phone Number')),
                ('zipcode', localflavor.us.models.USZipCodeField(blank=True, max_length=10, null=True, verbose_name='Zip Code')),
                ('letter_of_credit', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=5, null=True, verbose_name='Do you have a Letter of Credit?')),
                ('how_much_letter_of_credit', models.PositiveIntegerField(blank=True, null=True, verbose_name='How much Letter of Credit?')),
                ('line_of_credit', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=5, null=True, verbose_name='Do you have a Line of Credit?')),
                ('how_much_line_of_credit', models.PositiveIntegerField(blank=True, null=True, verbose_name='How much Line of Credit?')),
                ('when_to_order', models.CharField(choices=[('urgent', 'Urgent(within 30days)'), ('other', 'other')], default=None, max_length=50, verbose_name='When are you looking to order?')),
                ('other_when_to_order', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(31)], verbose_name='Other')),
                ('type_of_development', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Commercial', 'Commercial'), ('Mixed-use', 'Mixed-use'), ('Multi-tenant', 'Multi-tenant'), ('Condominium', 'Condominium'), ('Townhome', 'Townhome'), ('Man Camp', 'Man Camp'), ('Mobile Home Park', 'Mobile Home Park'), ('RV Park', 'RV Park'), ('Park Home (as defined by Housing and Urban Development)', 'Park Home (as defined by Housing and Urban Development)'), ('Other', 'Other')], max_length=300, null=True, verbose_name='What type of development(s) are you seeking?')),
                ('other_type_of_development', models.CharField(blank=True, max_length=300, null=True, verbose_name='Other')),
                ('type_of_climate_area', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Heavy Snow Load', 'Heavy Snow LoadHeavy Snow Load'), ('High Wind', 'High Wind'), ('Tornado', 'Tornado'), ('Earthquake', 'Earthquake'), ('Desert', 'Desert'), ('Other', 'Other ')], max_length=300, null=True, verbose_name='On which type of climate area(s) will the development(s) be sited? ')),
                ('other_type_of_climate_area', models.CharField(blank=True, max_length=200, null=True, verbose_name='Other')),
                ('type_of_smart_home', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Automated Home Shopping and Delivery', 'Automated Home Shopping and Delivery'), ('Self-Driving Transport to Local Shopping Centers', 'Self-Driving Transport to Local Shopping Centers'), ('Self-Driving Transport to Local Medical Facilities', 'Self-Driving Transport to Local Medical Facilities')], max_length=300, null=True, verbose_name='What type of smart home functionality are you interested in learning more about? ')),
                ('type_of_electric_vehicle_function', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Standard', 'Standard'), ('Capability to Load Handicapped Person Without Human Assistance', 'Capability to Load Handicapped Person Without Human Assistance'), ('Standard', 'Standard')], max_length=300, null=True, verbose_name='An electric vehicle will be included with each housing unit. What type of electric vehicle function are you interested in?')),
                ('learn_about_electric_drive', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=100, null=True, verbose_name='Do you wish to learn more about an optional electric-drive community transport vehicle?')),
                ('septic_infrastructure', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=100, null=True, verbose_name='Does the development site already have septic infrastructure or service?')),
                ('installation_septic_infrastructure', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], default=None, max_length=100, verbose_name='Does it require the installation of septic infrastructure? (There will be a charge for initial infrastructure installation and periodic maintenance service charges.) ')),
            ],
            options={
                'ordering': ('-when_to_order', '-how_much_line_of_credit'),
            },
        ),
    ]
